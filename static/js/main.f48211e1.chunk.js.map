{"version":3,"sources":["components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","redux/app/app-actions.js","redux/app/app-reducer.js","redux/store.js","redux/app/app-operations.js","redux/app/app-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.jsx","components/Container/Container.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","loading","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","axios","get","contactsOperations","fetchContacts","dispatch","a","data","addContact","name","number","contact","post","deleteContact","delete","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","text","includes","getFiteredContacts","ContactForm","useState","setName","setNumber","contactNameId","shortid","generate","contactNumberId","useDispatch","useSelector","handleChange","e","currentTarget","value","reset","className","s","form","onSubmit","preventDefault","find","alert","label","htmlFor","input","type","onChange","pattern","title","btn","size","color","ContactListItem","contactName","contactNumber","onClickDeleteContact","listItem","listItemText","button","onClick","ContactList","useEffect","list","map","onDeleteContact","Container","children","container","Filter","contactsActions","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f48211e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3reEB\",\"listItemText\":\"ContactListItem_listItemText__yKRmm\",\"button\":\"ContactListItem_button__2qvDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n} from './app-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\n// const error = createReducer(null, {});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  // error,\n});","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './app/app-reducer';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport logger from 'redux-logger';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './app-actions';\n\naxios.get(\"http://localhost:4040/contacts\")\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  try {\n    const { data } = await axios.get('http://localhost:4040/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('http://localhost:4040/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n  try {\n    await axios.delete(`http://localhost:4040/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\nexport default contactsOperations;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const getFiteredContacts = contacts => {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(text =>\n        text.name.toLowerCase().includes(normalizedFilter),\n      );\n    };\n\n    return getFiteredContacts(contacts);\n  },\n);","import React, { useState } from 'react';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\nimport s from './ContactForm.module.css';\nimport shortid from 'shortid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsOperations from '../../redux/app/app-operations';\nimport { getContacts } from '../../redux/app/app-selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactNameId = shortid.generate();\n  const contactNumberId = shortid.generate();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name === '') {\n      alert(`Введите, пожалуйста, имя контакта.`);\n      return;\n    }\n\n    if (number === '') {\n      alert(`Введите, пожалуйста, номер телефона контакта.`);\n      return;\n    }\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      reset();\n      return;\n    }\n    dispatch(contactsOperations.addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={contactNameId}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          id={contactNameId}\n        />\n      </label>\n      <label className={s.label} htmlFor={contactNumberId}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          id={contactNumberId}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        <span className={s.btn}>Add contact</span>\n        <AiOutlineUserAdd size=\"20px\" color=\"rgb(130, 27, 112)\" />\n      </button>\n    </form>\n  );\n}","import s from './ContactListItem.module.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineUserDelete } from 'react-icons/ai';\n\nconst ContactListItem = ({\n  contactName,\n  contactNumber,\n  onClickDeleteContact,\n}) => {\n  return (\n    <li className={s.listItem}>\n      <span className={s.listItemText}>{contactName}:</span>\n      <span className={s.listItemText}>{contactNumber}</span>\n      <button className={s.button} type=\"button\" onClick={onClickDeleteContact}>\n        Delete <AiOutlineUserDelete size=\"15px\" />\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onClickDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import s from './ContactList.module.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem/ContactListItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsOperations from '../../redux/app/app-operations';\nimport { getVisibleContacts } from '../../redux/app/app-selectors';\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n  const contacts = useSelector(getVisibleContacts);\n\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          contactName={name}\n          contactNumber={number}\n          onClickDeleteContact={() => onDeleteContact(id)}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/app/app-selectors';\nimport * as contactsActions from '../../redux/app/app-actions';\n\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;","import React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Container from \"./components/Container/Container\";\nimport Filter from \"./components/Filter/Filter\";\nimport s from \"./index.css\"\n\nexport default function App() {\n  return (\n    <Container>\n      <div className={s.container}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </Container>\n  );\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nimport s from './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App className={s} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}